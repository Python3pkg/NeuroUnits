


module stimulation {

    define_component i_fixed{
        i = i_amp
        <=> OUTPUT i:(A)
        <=> PARAMETER i_amp:(A)
    }




    define_component step_current{
        regime OFF{
            i=0A
            on (t>t_start) {
                transition_to ON;
            }
            }
            
        regime ON{
            i = i_amp
        }
        
        
        <=> OUTPUT i:(A)
        <=> PARAMETER i_amp:(A), t_start
        <=> INPUT t:(ms)
    }
    
    
    
    #define_component i_ramp{
    #    regime OFF{
    #        i=0A
    #        on (t>t_start) {
    #        transition_to RAMP;
    #        }
    #        }
    #    regime RAMP{
    #        i = (t-ramp_start)/ramp_dur * i_amp
    #        on(t>ramp_start+ramp_dur){ 
    #        transition_to ON 
    #        }
    #    }
    #    regime ON{
    #        i = i_amp
    #    }
    #    
    #    <=> PARAMETER ramp_start, ramp_dur, t_start
    #    <=> OUTPUT i:(A)
    #    <=> PARAMETER i_amp:(A)
    #    <=> INPUT t:(ms)
    #}
    
    
    
    
      
    define_component i_squarewave{
        t_last'=0
        
        regime init{
            on(0<1){
                t_last = 0s
                transition_to OFF 
                }
        }
        #t_last=0ms
        regime OFF{
            i=0A
            on (t>t_last + t_off) {
                t_last = t
                transition_to ON;
                }
            }
        
        regime ON{
            i = i_amp
            on (t>t_last + t_on) {
                t_last = t
                transition_to OFF;
                }
        }
        
        <=> PARAMETER t_on, t_off 
        <=> OUTPUT i:(A)
        <=> PARAMETER i_amp:(A)        
        <=> INPUT t:(ms)    
        
        }
    
    
    define_component i_sinwave{
     #TODO:
    }
    
    
  
    
}



module event_generators{


    define_component fixed_interval{
        regime init{
            t_last = 0s
            on(0<1){ 
                transition_to std 
            }
        }
        
        regime std{
            on( t>t_last +t_period){
                t_last = t
                emit spike()
                }
            
        }
        a = t_period + t
        <=> INPUT t:(ms)
        <=> PARAMETER t_period
    }
    
    


}
